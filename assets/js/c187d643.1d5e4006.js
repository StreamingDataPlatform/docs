(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{144:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return o})),t.d(a,"metadata",(function(){return c})),t.d(a,"toc",(function(){return s})),t.d(a,"default",(function(){return p}));var n=t(3),r=t(7),l=(t(0),t(169)),o={title:"Deploying in Kubernetes"},c={unversionedId:"pravega/deployment/kubernetes-install",id:"pravega/deployment/kubernetes-install",isDocsHomePage:!1,title:"Deploying in Kubernetes",description:"\x3c!--",source:"@site/docs/pravega/deployment/kubernetes-install.md",slug:"/pravega/deployment/kubernetes-install",permalink:"/docs/docs/pravega/deployment/kubernetes-install",editUrl:"https://github.com/claudiofahey/pravega/edit/docusaurus/documentation/src/docs/deployment/kubernetes-install.md",version:"current",sidebar:"mainSidebar",previous:{title:"Manual Installation",permalink:"/docs/docs/pravega/deployment/manual-install"},next:{title:"Deploying in a Docker Swarm",permalink:"/docs/docs/pravega/deployment/docker-swarm"}},s=[{value:"Table of Contents",id:"table-of-contents",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Usage",id:"usage",children:[{value:"Install the Pravega Operator",id:"install-the-pravega-operator",children:[]},{value:"Deploy a sample Pravega cluster",id:"deploy-a-sample-pravega-cluster",children:[]},{value:"Scale a Pravega Cluster",id:"scale-a-pravega-cluster",children:[]},{value:"Upgrade a Pravega Cluster",id:"upgrade-a-pravega-cluster",children:[]},{value:"Uninstall the Pravega cluster",id:"uninstall-the-pravega-cluster",children:[]},{value:"Uninstall the Pravega cluster",id:"uninstall-the-pravega-cluster-1",children:[]},{value:"Uninstall the Pravega Operator",id:"uninstall-the-pravega-operator",children:[]}]},{value:"Configuration",id:"configuration",children:[{value:"Use non-default service accounts",id:"use-non-default-service-accounts",children:[]},{value:"Installing on a Custom Namespace with RBAC enabled",id:"installing-on-a-custom-namespace-with-rbac-enabled",children:[]},{value:"Use Google Filestore Storage as Tier 2",id:"use-google-filestore-storage-as-tier-2",children:[]},{value:"Tune Pravega configuration",id:"tune-pravega-configuration",children:[]},{value:"Enable External Access",id:"enable-external-access",children:[]}]},{value:"Releases",id:"releases",children:[]}],i={toc:s};function p(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},i,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"table-of-contents"},"Table of Contents"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#requirements"},"Requirements"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#pravega-operator"},"Pravega Operator")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#usage"},"Usage"),"    ",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#install-the-pravega-operator"},"Installation of the Pravega Operator")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#deploy-a-sample-pravega-cluster"},"Deploy a sample Pravega Cluster")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#scale-a-pravega-cluster"},"Scale a Pravega Cluster")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#upgrade-a-pravega-cluster"},"Upgrade a Pravega Cluster")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#uninstall-the-pravega-cluster"},"Uninstall the Pravega Cluster")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#uninstall-the-pravega-operator"},"Uninstall the Pravega Operator")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#configuration"},"Configuration"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#use-non-default-service-accounts"},"Use non-default service accounts")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#installing-on-a-custom-namespace-with-rbac-enabled"},"Installing on a Custom Namespace with RBAC enabled")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#use-google-filestore-storage-as-tier-2"},"Tier 2: Google Filestore Storage")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#tune-pravega-configuration"},"Tune Pravega Configurations")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#enable-external-access"},"Enable External Access")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#releases"},"Releases"))),Object(l.b)("h2",{id:"requirements"},"Requirements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Kubernetes 1.8+"),Object(l.b)("li",{parentName:"ul"},"An existing Apache Zookeeper 3.5 cluster. This can be easily deployed using our ",Object(l.b)("a",{parentName:"li",href:"https://github.com/pravega/zookeeper-operator"},"Zookeeper Operator"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://github.com/pravega/pravega-operator/edit/master/README.md"},"Pravega Operator")," manages Pravega clusters deployed to Kubernetes and automates tasks related to operating a Pravega cluster.")),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("h3",{id:"install-the-pravega-operator"},"Install the Pravega Operator"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Note: If you are running on Google Kubernetes Engine (GKE), please ",Object(l.b)("a",{parentName:"p",href:"https://github.com/pravega/pravega-operator#installation-on-google-kubernetes-engine"},"check this first"),".")),Object(l.b)("p",null,"Run the following command to install the ",Object(l.b)("inlineCode",{parentName:"p"},"PravegaCluster")," custom resource definition (CRD), create the ",Object(l.b)("inlineCode",{parentName:"p"},"pravega-operator")," service account, roles, bindings, and the deploy the Pravega Operator."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl create -f deploy\n")),Object(l.b)("p",null,"Verify that the Pravega Operator is running."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl get deploy\nNAME                 DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE\npravega-operator     1         1         1            1           17s\n")),Object(l.b)("h3",{id:"deploy-a-sample-pravega-cluster"},"Deploy a sample Pravega cluster"),Object(l.b)("p",null,"Pravega requires a long term storage provider known as Tier 2 storage. The following Tier 2 storage providers are supported:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Filesystem (NFS)"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"#using-google-filestore-storage-as-tier-2"},"Google Filestore")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://www.dellemc.com/sr-me/storage/ecs/index.htm"},"DellEMC ECS")),Object(l.b)("li",{parentName:"ul"},"HDFS (must support Append operation)")),Object(l.b)("p",null,"The following example uses an NFS volume provisioned by the ",Object(l.b)("a",{parentName:"p",href:"https://github.com/kubernetes/charts/tree/master/stable/nfs-server-provisioner"},"NFS Server Provisioner")," helm chart to provide Tier 2 storage."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ helm install stable/nfs-server-provisioner\n")),Object(l.b)("p",null,"Verify that the ",Object(l.b)("inlineCode",{parentName:"p"},"nfs")," storage class is now available."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl get storageclass\nNAME                 PROVISIONER                                             AGE\nnfs                  cluster.local/elevated-leopard-nfs-server-provisioner   24s\n...\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Note: This is ONLY intended as a demo and should NOT be used for production deployments.")),Object(l.b)("p",null,"Once the NFS server provisioner is installed, you can create a ",Object(l.b)("inlineCode",{parentName:"p"},"PersistentVolumeClaim")," that will be used as Tier 2 for Pravega. Create a ",Object(l.b)("inlineCode",{parentName:"p"},"pvc.yaml")," file with the following content."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yaml"},'kind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: pravega-tier2\nspec:\n  storageClassName: "nfs"\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 50Gi\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl create -f pvc.yaml\n")),Object(l.b)("p",null,"Use the following YAML template to install a small development Pravega Cluster (3 Bookies, 1 Controller, 3 Segment Stores). Create a ",Object(l.b)("inlineCode",{parentName:"p"},"pravega.yaml")," file with the following content."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: "pravega.pravega.io/v1alpha1"\nkind: "PravegaCluster"\nmetadata:\n  name: "example"\nspec:\n  version: 0.4.0\n  zookeeperUri: [ZOOKEEPER_HOST]:2181\n\n  bookkeeper:\n    replicas: 3\n    image:\n      repository: pravega/bookkeeper\n    autoRecovery: true\n\n  pravega:\n    controllerReplicas: 1\n    segmentStoreReplicas: 3\n    image:\n      repository: pravega/pravega\n    tier2:\n      filesystem:\n        persistentVolumeClaim:\n          claimName: pravega-tier2\n')),Object(l.b)("p",null,"where:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"[ZOOKEEPER_HOST]")," is the host or IP address of your Zookeeper deployment.")),Object(l.b)("p",null,"Deploy the Pravega cluster."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl create -f pravega.yaml\n")),Object(l.b)("p",null,"Verify that the cluster instances and its components are being created."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl get PravegaCluster\nNAME      VERSION   DESIRED MEMBERS   READY MEMBERS   AGE\nexample   0.4.0     7                 0               25s\n")),Object(l.b)("p",null,"After a couple of minutes, all cluster members should become ready."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl get PravegaCluster\nNAME      VERSION   DESIRED MEMBERS   READY MEMBERS   AGE\nexample   0.4.0     7                 7               2m\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl get all -l pravega_cluster=example\nNAME                                              READY   STATUS    RESTARTS   AGE\npod/example-bookie-0                              1/1     Running   0          2m\npod/example-bookie-1                              1/1     Running   0          2m\npod/example-bookie-2                              1/1     Running   0          2m\npod/example-pravega-controller-64ff87fc49-kqp9k   1/1     Running   0          2m\npod/example-pravega-segmentstore-0                1/1     Running   0          2m\npod/example-pravega-segmentstore-1                1/1     Running   0          1m\npod/example-pravega-segmentstore-2                1/1     Running   0          30s\n\nNAME                                            TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)              AGE\nservice/example-bookie-headless                 ClusterIP   None          <none>        3181/TCP             2m\nservice/example-pravega-controller              ClusterIP   10.23.244.3   <none>        10080/TCP,9090/TCP   2m\nservice/example-pravega-segmentstore-headless   ClusterIP   None          <none>        12345/TCP            2m\n\nNAME                                                    DESIRED   CURRENT   READY   AGE\nreplicaset.apps/example-pravega-controller-64ff87fc49   1         1         1       2m\n\nNAME                                            DESIRED   CURRENT   AGE\nstatefulset.apps/example-bookie                 3         3         2m\nstatefulset.apps/example-pravega-segmentstore   3         3         2m\n")),Object(l.b)("p",null,"By default, a ",Object(l.b)("inlineCode",{parentName:"p"},"PravegaCluster")," instance is only accessible within the cluster through the Controller ",Object(l.b)("inlineCode",{parentName:"p"},"ClusterIP")," service. From within the Kubernetes cluster, a client can connect to Pravega at:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"tcp://<pravega-name>-pravega-controller.<namespace>:9090\n")),Object(l.b)("p",null,"And the ",Object(l.b)("inlineCode",{parentName:"p"},"REST")," management interface is available at:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"http://<pravega-name>-pravega-controller.<namespace>:10080/\n")),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"#enable-external-access"},"Check this")," to enable external access to a Pravega cluster."),Object(l.b)("h3",{id:"scale-a-pravega-cluster"},"Scale a Pravega Cluster"),Object(l.b)("p",null,"You can scale Pravega components independently by modifying their corresponding field in the Pravega resource spec. You can either ",Object(l.b)("inlineCode",{parentName:"p"},"kubectl edit")," the cluster or ",Object(l.b)("inlineCode",{parentName:"p"},"kubectl patch")," it. If you edit it, update the number of replicas for BookKeeper, Controller, and/or Segment Store and save the updated spec."),Object(l.b)("p",null,"Example of patching the Pravega resource to scale the Segment Store instances to 4."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'kubectl patch PravegaCluster example --type=\'json\' -p=\'[{"op": "replace", "path": "/spec/pravega/segmentStoreReplicas", "value": 4}]\'\n')),Object(l.b)("h3",{id:"upgrade-a-pravega-cluster"},"Upgrade a Pravega Cluster"),Object(l.b)("p",null,"Check out the ",Object(l.b)("a",{parentName:"p",href:"https://github.com/pravega/pravega-operator/blob/master/doc/upgrade-cluster.md"},"Upgrade Guide"),"."),Object(l.b)("h3",{id:"uninstall-the-pravega-cluster"},"Uninstall the Pravega cluster"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl delete -f pravega.yaml\n$ kubectl delete -f pvc.yaml\n")),Object(l.b)("h3",{id:"uninstall-the-pravega-cluster-1"},"Uninstall the Pravega cluster"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl delete -f pravega.yaml\n$ kubectl delete -f pvc.yaml\n")),Object(l.b)("h3",{id:"uninstall-the-pravega-operator"},"Uninstall the Pravega Operator"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Note that the Pravega clusters managed by the Pravega operator will NOT be deleted even if the operator is uninstalled.")),Object(l.b)("p",null,"To delete all clusters, delete all cluster CR objects before uninstalling the Pravega Operator."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl delete -f deploy\n")),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)("h3",{id:"use-non-default-service-accounts"},"Use non-default service accounts"),Object(l.b)("p",null,"You can optionally configure non-default service accounts for the Bookkeeper, Pravega Controller, and Pravega Segment Store pods."),Object(l.b)("p",null,"For BookKeeper, set the ",Object(l.b)("inlineCode",{parentName:"p"},"serviceAccountName")," field under the ",Object(l.b)("inlineCode",{parentName:"p"},"bookkeeper")," block."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"...\nspec:\n  bookkeeper:\n    serviceAccountName: bk-service-account\n...\n")),Object(l.b)("p",null,"For Pravega, set the ",Object(l.b)("inlineCode",{parentName:"p"},"controllerServiceAccountName")," and ",Object(l.b)("inlineCode",{parentName:"p"},"segmentStoreServiceAccountName")," fields under the ",Object(l.b)("inlineCode",{parentName:"p"},"pravega")," block."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"...\nspec:\n  pravega:\n    controllerServiceAccountName: ctrl-service-account\n    segmentStoreServiceAccountName: ss-service-account\n...\n")),Object(l.b)("p",null,"If external access is enabled in your Pravega cluster, Segment Store pods will require access to some Kubernetes API endpoints to obtain the external IP and port. Make sure that the service account you are using for the Segment Store has, at least, the following permissions."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},'kind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: pravega-components\n  namespace: "pravega-namespace"\nrules:\n- apiGroups: ["pravega.pravega.io"]\n  resources: ["*"]\n  verbs: ["get"]\n- apiGroups: [""]\n  resources: ["pods", "services"]\n  verbs: ["get"]\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: pravega-components\nrules:\n- apiGroups: [""]\n  resources: ["nodes"]\n  verbs: ["get"]\n')),Object(l.b)("p",null,"Replace the ",Object(l.b)("inlineCode",{parentName:"p"},"namespace")," with your own namespace."),Object(l.b)("h3",{id:"installing-on-a-custom-namespace-with-rbac-enabled"},"Installing on a Custom Namespace with RBAC enabled"),Object(l.b)("p",null,"Create the namespace."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl create namespace pravega-io\n")),Object(l.b)("p",null,"Update the namespace configured in the ",Object(l.b)("inlineCode",{parentName:"p"},"deploy/role_binding.yaml")," file."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ sed -i -e 's/namespace: default/namespace: pravega-io/g' deploy/role_binding.yaml\n")),Object(l.b)("p",null,"Apply the changes."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl -n pravega-io apply -f deploy\n")),Object(l.b)("p",null,"Note that the Pravega Operator only monitors the ",Object(l.b)("inlineCode",{parentName:"p"},"PravegaCluster")," resources which are created in the same namespace, ",Object(l.b)("inlineCode",{parentName:"p"},"pravega-io")," in this example. Therefore, before creating a ",Object(l.b)("inlineCode",{parentName:"p"},"PravegaCluster")," resource, make sure an Operator exists in that namespace."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl -n pravega-io create -f example/cr.yaml\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl -n pravega-io get pravegaclusters\nNAME      AGE\npravega   28m\n")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl -n pravega-io get pods -l pravega_cluster=pravega\nNAME                                          READY     STATUS    RESTARTS   AGE\npravega-bookie-0                              1/1       Running   0          29m\npravega-bookie-1                              1/1       Running   0          29m\npravega-bookie-2                              1/1       Running   0          29m\npravega-pravega-controller-6c54fdcdf5-947nw   1/1       Running   0          29m\npravega-pravega-segmentstore-0                1/1       Running   0          29m\npravega-pravega-segmentstore-1                1/1       Running   0          29m\npravega-pravega-segmentstore-2                1/1       Running   0          29m\n")),Object(l.b)("h3",{id:"use-google-filestore-storage-as-tier-2"},"Use Google Filestore Storage as Tier 2"),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},Object(l.b)("a",{parentName:"li",href:"https://console.cloud.google.com/filestore/instances"},"Create a Google Filestore"),".")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Refer to ",Object(l.b)("a",{parentName:"p",href:"https://cloud.google.com/filestore/docs/accessing-fileshares"},"https://cloud.google.com/filestore/docs/accessing-fileshares")," for more information")),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"Create a ",Object(l.b)("inlineCode",{parentName:"li"},"pv.yaml")," file with the ",Object(l.b)("inlineCode",{parentName:"li"},"PersistentVolume")," specification to provide Tier 2 storage.")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pravega-volume\nspec:\n  capacity:\n    storage: 1T\n  accessModes:\n  - ReadWriteMany\n  nfs:\n    path: /[FILESHARE]\n    server: [IP_ADDRESS]\n")),Object(l.b)("p",null,"where:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"[FILESHARE]")," is the name of the fileshare on the Cloud Filestore instance (e.g. ",Object(l.b)("inlineCode",{parentName:"li"},"vol1"),")"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"[IP_ADDRESS]")," is the IP address for the Cloud Filestore instance (e.g. ",Object(l.b)("inlineCode",{parentName:"li"},"10.123.189.202"),")")),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Deploy the ",Object(l.b)("inlineCode",{parentName:"li"},"PersistentVolume")," specification.")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl create -f pv.yaml\n")),Object(l.b)("ol",{start:4},Object(l.b)("li",{parentName:"ol"},"Create and deploy a ",Object(l.b)("inlineCode",{parentName:"li"},"PersistentVolumeClaim")," to consume the volume created.")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yaml"},'kind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: pravega-tier2\nspec:\n  storageClassName: ""\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 50Gi\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre"},"$ kubectl create -f pvc.yaml\n")),Object(l.b)("p",null,"Use the same ",Object(l.b)("inlineCode",{parentName:"p"},"pravega.yaml")," above to deploy the Pravega cluster."),Object(l.b)("h3",{id:"tune-pravega-configuration"},"Tune Pravega configuration"),Object(l.b)("p",null,"Pravega has many configuration options for setting up metrics, tuning, etc. The available options can be found\n",Object(l.b)("a",{parentName:"p",href:"https://github.com/pravega/pravega/blob/master/config/config.properties"},"here")," and are\nexpressed through the ",Object(l.b)("inlineCode",{parentName:"p"},"pravega/options")," part of the resource specification. All values must be expressed as Strings."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yaml"},'...\nspec:\n  pravega:\n    options:\n      metrics.statistics.enable: "true"\n      metrics.statsD.connect.host: "telegraph.default"\n      metrics.statsD.connect.port: "8125"\n...\n')),Object(l.b)("h3",{id:"enable-external-access"},"Enable External Access"),Object(l.b)("p",null,"By default, a Pravega cluster uses ",Object(l.b)("inlineCode",{parentName:"p"},"ClusterIP")," services which are only accessible from within Kubernetes. However, when creating the Pravega cluster resource, you can opt to enable external access."),Object(l.b)("p",null,"In Pravega, clients initiate the communication with the Pravega Controller, which is a stateless component frontended by a Kubernetes service that load-balances the requests to the backend pods. Then, clients discover the individual Segment Store instances to which they directly read and write data to. Clients need to be able to reach each and every Segment Store pod in the Pravega cluster."),Object(l.b)("p",null,"If your Pravega cluster needs to be consumed by clients from outside Kubernetes (or from another Kubernetes deployment), you can enable external access in two ways, depending on your environment constraints and requirements. Both ways will create one service for all Controllers, and one service for each Segment Store pod."),Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Via ",Object(l.b)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer"},Object(l.b)("inlineCode",{parentName:"a"},"LoadBalancer"))," service type."),Object(l.b)("li",{parentName:"ol"},"Via ",Object(l.b)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/services-networking/service/#nodeport"},Object(l.b)("inlineCode",{parentName:"a"},"NodePort"))," service type.")),Object(l.b)("p",null,"For more information, Please check ",Object(l.b)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types"},"Kubernetes documentation"),"."),Object(l.b)("p",null,"Example of configuration for using ",Object(l.b)("inlineCode",{parentName:"p"},"LoadBalancer")," service types:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yaml"},"...\nspec:\n  externalAccess:\n    enabled: true\n    type: LoadBalancer\n...\n")),Object(l.b)("p",null,"Clients will need to connect to the external Controller address and will automatically discover the external address of all Segment Store pods."),Object(l.b)("h2",{id:"releases"},"Releases"),Object(l.b)("p",null,"The latest Pravega releases can be found on the ",Object(l.b)("a",{parentName:"p",href:"https://github.com/pravega/pravega-operator/releases"},"GitHub Release")," project page."))}p.isMDXComponent=!0},169:function(e,a,t){"use strict";t.d(a,"a",(function(){return b})),t.d(a,"b",(function(){return d}));var n=t(0),r=t.n(n);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=r.a.createContext({}),p=function(e){var a=r.a.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},b=function(e){var a=p(e.components);return r.a.createElement(i.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},m=r.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),b=p(t),m=n,d=b["".concat(o,".").concat(m)]||b[m]||u[m]||l;return t?r.a.createElement(d,c(c({ref:a},i),{},{components:t})):r.a.createElement(d,c({ref:a},i))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,o=new Array(l);o[0]=m;var c={};for(var s in a)hasOwnProperty.call(a,s)&&(c[s]=a[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var i=2;i<l;i++)o[i]=t[i];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);