(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{131:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),i=(n(0),n(160)),o={title:"Configuration"},l={unversionedId:"spark-connectors/configuration",id:"spark-connectors/configuration",isDocsHomePage:!1,title:"Configuration",description:"\x3c!--",source:"@site/docs/spark-connectors/configuration.md",slug:"/spark-connectors/configuration",permalink:"/docs/docs/spark-connectors/configuration",editUrl:"https://github.com/pravega/spark-connectors/edit/docusaurus/documentation/src/docs/configuration.md",version:"current",sidebar:"mainSidebar",previous:{title:"Samples",permalink:"/docs/docs/spark-connectors/samples"},next:{title:"Building the Connector",permalink:"/docs/docs/spark-connectors/build-connector"}},c=[{value:"Connector Parameters",id:"connector-parameters",children:[]},{value:"Configuring Pravega for Exactly-Once",id:"configuring-pravega-for-exactly-once",children:[]}],b={toc:c};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"connector-parameters"},"Connector Parameters"),Object(i.b)("p",null,"The following table lists the configurable parameters of the Pravega Spark connector and their default values."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Parameter"),Object(i.b)("th",{parentName:"tr",align:null},"Description"),Object(i.b)("th",{parentName:"tr",align:null},"Default"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"allow_create_scope")),Object(i.b)("td",{parentName:"tr",align:null},"If true, the Pravega scope will be automatically created. This must be false when running in Dell EMC Streaming Data Platform."),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"true"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"allow_create_stream")),Object(i.b)("td",{parentName:"tr",align:null},"If true, the Pravega stream will be automatically created."),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"true"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"controller")),Object(i.b)("td",{parentName:"tr",align:null},"The URI endpoint of the Pravega controller in the form of ",Object(i.b)("inlineCode",{parentName:"td"},"protocol://hostname:port"),"."),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"tcp://localhost:9090"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"default_num_segments")),Object(i.b)("td",{parentName:"tr",align:null},"The default number of segments for a stream. This is ignored if the stream already exists."),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"default_retention_duration_milliseconds")),Object(i.b)("td",{parentName:"tr",align:null},"The default time in form of ",Object(i.b)("inlineCode",{parentName:"td"},"ms")," to decide how much data to retain within a stream. This is ignored if the stream already exists."),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"default_retention_size_bytes")),Object(i.b)("td",{parentName:"tr",align:null},"The default size in the form of ",Object(i.b)("inlineCode",{parentName:"td"},"bytes")," to decide how much data to retain within a stream. This is ignored if the stream already exists."),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"default_scale_factor")),Object(i.b)("td",{parentName:"tr",align:null},"The default scale factor for a stream to decide if it should automatically scale its number of segments. This is ignored if the stream already exists."),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"default_segment_target_rate_bytes_per_sec")),Object(i.b)("td",{parentName:"tr",align:null},"The target rate for a segment in the form of ",Object(i.b)("inlineCode",{parentName:"td"},"bytes")," per second. This is ignored if the stream already exists."),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"default_segment_target_rate_events_per_sec")),Object(i.b)("td",{parentName:"tr",align:null},"The target rate for a segment in the form of ",Object(i.b)("inlineCode",{parentName:"td"},"events")," per second. This is ignored if the stream already exists."),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"end_stream_cut")),Object(i.b)("td",{parentName:"tr",align:null},"The end stream cut (offsets) of a stream. Can be ",Object(i.b)("inlineCode",{parentName:"td"},"latest"),", ",Object(i.b)("inlineCode",{parentName:"td"},"unbounded"),", or a specific base-64 encoded stream cut. ",Object(i.b)("inlineCode",{parentName:"td"},"latest")," will be resolved at the start of the job."),Object(i.b)("td",{parentName:"tr",align:null},"Batch Job: ",Object(i.b)("inlineCode",{parentName:"td"},"latest"),"; Stream Job: ",Object(i.b)("inlineCode",{parentName:"td"},"unbounded"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"exactly_once")),Object(i.b)("td",{parentName:"tr",align:null},"If true, use Pravega transactions when writing to provide exactly-once semantics. Set to false for reduced write latency."),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"true"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"metadata")),Object(i.b)("td",{parentName:"tr",align:null},'If set, a read will return scope or stream metadata instead of the stream data. "Streams" will return a list of streams in the scope. "StreamInfo" will return head and tail stream cuts.'),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"read_after_write_consistency")),Object(i.b)("td",{parentName:"tr",align:null},"If true, commits will wait for Pravega to finish committing transactions before completing."),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"true"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"scope")),Object(i.b)("td",{parentName:"tr",align:null},"The Pravega scope containing the data stream."),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"start_stream_cut")),Object(i.b)("td",{parentName:"tr",align:null},"The start stream cut (offsets) of a stream. Can be ",Object(i.b)("inlineCode",{parentName:"td"},"earliest"),", ",Object(i.b)("inlineCode",{parentName:"td"},"latest"),", ",Object(i.b)("inlineCode",{parentName:"td"},"unbounded"),", or a specific base-64 encoded stream cut. ",Object(i.b)("inlineCode",{parentName:"td"},"earliest")," and ",Object(i.b)("inlineCode",{parentName:"td"},"latest")," will be resolved at the start of the job."),Object(i.b)("td",{parentName:"tr",align:null},"Batch Job: ",Object(i.b)("inlineCode",{parentName:"td"},"earliest"),"; Stream Job: ",Object(i.b)("inlineCode",{parentName:"td"},"latest"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"stream")),Object(i.b)("td",{parentName:"tr",align:null},"The name of the Pravega stream to read or write."),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"transaction_timeout_ms")),Object(i.b)("td",{parentName:"tr",align:null},"The time-out value for a transaction in the form of ",Object(i.b)("inlineCode",{parentName:"td"},"ms"),"."),Object(i.b)("td",{parentName:"tr",align:null},"Batch Job: ",Object(i.b)("inlineCode",{parentName:"td"},"120000")," (2 minutes); Stream Job: ",Object(i.b)("inlineCode",{parentName:"td"},"30000"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"transaction_status_poll_interval_ms")),Object(i.b)("td",{parentName:"tr",align:null},"The time interval in ",Object(i.b)("inlineCode",{parentName:"td"},"ms")," for which the transaction status is polled. This is used only if ",Object(i.b)("inlineCode",{parentName:"td"},"read_after_write_consistency")," is true."),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"50"))))),Object(i.b)("h2",{id:"configuring-pravega-for-exactly-once"},"Configuring Pravega for Exactly-Once"),Object(i.b)("p",null,"When writing events to Pravega with ",Object(i.b)("inlineCode",{parentName:"p"},"exactly_once")," set to true (the default), Pravega transactions are used.\nThis connector begins a transaction during the execution of each task and commits all transactions\nonly at the end of the batch job or at the end of the micro-batch.\nTo prevent the Pravega transaction from timing out, you must apply the following configuration."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"The Pravega Controller must be configured with the following settings to allow transactions to remain open for up to 30 days without lease renewals."),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre"},"-Dcontroller.transaction.lease.count.max=2592000000\n-Dcontroller.transaction.execution.timeBound.days=30\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"The Pravega Spark connector writer must be configured with a reasonable value for ",Object(i.b)("inlineCode",{parentName:"p"},"transaction_timeout_ms"),".\nThis should be the maximum number of milliseconds that you expect the Spark job to take.\nIt must not exceed ",Object(i.b)("inlineCode",{parentName:"p"},"controller.transaction.lease.count.max"),"."))))}d.isMDXComponent=!0},160:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),d=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=d(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),m=d(n),p=a,u=m["".concat(o,".").concat(p)]||m[p]||s[p]||i;return n?r.a.createElement(u,l(l({ref:t},b),{},{components:n})):r.a.createElement(u,l({ref:t},b))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var b=2;b<i;b++)o[b]=n[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);